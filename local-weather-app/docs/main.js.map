{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/city-search/city-search.component.css","webpack:///./src/app/city-search/city-search.component.html","webpack:///./src/app/city-search/city-search.component.ts","webpack:///./src/app/current-weather/current-weather.component.css","webpack:///./src/app/current-weather/current-weather.component.html","webpack:///./src/app/current-weather/current-weather.component.ts","webpack:///./src/app/weather/weather.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".content {\\r\\n    color: #3b6070;\\r\\n    background-color: #fff;\\r\\n    min-height: 70vh;\\r\\n    width: 30%;\\r\\n    padding: 60px;\\r\\n    margin: 60px auto;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 1200px) {\\r\\n    .content {\\r\\n        width: 50%;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"content\\\">\\r\\n\\r\\n  <h1>What the temp?</h1>\\r\\n  <p>See the current temperature in Fahrenheit and Celsius, at the same time.</p>\\r\\n  <app-city-search (searchEvent)=\\\"doSearch($event)\\\"></app-city-search>  \\r\\n  <app-current-weather [current]=\\\"currentWeather\\\"></app-current-weather>\\r\\n\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { WeatherService } from './weather/weather.service';\r\nimport { ICurrentWeather } from './icurrent-weather';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  currentWeather: ICurrentWeather;\r\n  \r\n  constructor(private weatherService: WeatherService) {}\r\n\r\n  doSearch(searchValue){\r\n    const userInput = searchValue.split(',')\r\n      .map(s => s.trim());\r\n    this.weatherService.getCurrentWeather(userInput[0],\r\n      userInput.length > 1 ? userInput[1] : undefined)\r\n      .subscribe(data => this.currentWeather = data)\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CurrentWeatherComponent } from './current-weather/current-weather.component';\r\nimport { WeatherService } from './weather/weather.service';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CitySearchComponent } from './city-search/city-search.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CurrentWeatherComponent,\r\n    CitySearchComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [WeatherService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"input[type=text] {\\r\\n    border: none;\\r\\n    border-bottom: 1px solid #3b6070;\\r\\n    height: 48px;\\r\\n    padding: 0 12px;\\r\\n    margin-top: 2em;\\r\\n    width: calc(100% - 24px);\\r\\n}\\r\\ninput[type=text]:focus{\\r\\n    background-color: #eee;\\r\\n    outline: none;\\r\\n}\\r\\n.error {\\r\\n    color: #be4343;\\r\\n    font-size: .8em;\\r\\n    padding: 1em;\\r\\n    text-align: left;\\r\\n}\"","module.exports = \"<form action=\\\"\\\">\\r\\n  <input type=\\\"text\\\" placeholder=\\\"Enter city or zip\\\" [formControl]=\\\"search\\\">\\r\\n  <!-- <input type=\\\"button\\\"> -->\\r\\n  <div class='error' *ngIf=\\\"search.invalid\\\">{{getErrorMessage()}}</div>\\r\\n</form>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { WeatherService } from '../weather/weather.service';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-city-search',\r\n  templateUrl: './city-search.component.html',\r\n  styleUrls: ['./city-search.component.css']\r\n})\r\nexport class CitySearchComponent implements OnInit {\r\n  search = new FormControl('', [Validators.minLength(3)])\r\n\r\n  @Output() searchEvent = new EventEmitter<string>();\r\n\r\n  constructor(private weatherService: WeatherService) {    \r\n  }\r\n\r\n  getErrorMessage(){\r\n    return this.search.hasError('minlength') ? 'Enter a minimum of 3 characters' : ''\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.search.valueChanges\r\n    .pipe(debounceTime(1000))\r\n    .subscribe((searchValue: string) => {\r\n      if (!this.search.invalid) {\r\n        this.searchEvent.emit(searchValue)\r\n      }\r\n    })  \r\n  }\r\n}\r\n","module.exports = \"h2 {\\r\\n    padding-top: 40px;\\r\\n    margin-top: 60px;\\r\\n    font-size: 2em;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n    color: #999;\\r\\n}\\r\\n\\r\\n.temp {\\r\\n    color: #3b6070;\\r\\n    font-size: 2.4em;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"current\\\">\\r\\n  <div>\\r\\n    <h2>{{current.city}}, {{current.country}}</h2>\\r\\n    <h3>{{current.date | date:'fullDate'}}</h3>\\r\\n  </div>\\r\\n  \\r\\n  <div>\\r\\n    <p class='temp'>{{current.temperatureFahrenheit | number:'1.0-0'}} F | \\r\\n      {{current.temperatureCelsius | number:'1.0-0'}} C\\r\\n    </p>\\r\\n\\r\\n  </div>\\r\\n  \\r\\n  <div>\\r\\n    <img [src]='current.image'>\\r\\n    <p>{{current.description}}</p>    \\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ICurrentWeather } from '../icurrent-weather';\r\nimport { WeatherService } from '../weather/weather.service';\r\n \r\n@Component({\r\n  selector: 'app-current-weather',\r\n  templateUrl: './current-weather.component.html',\r\n  styleUrls: ['./current-weather.component.css']\r\n})\r\nexport class CurrentWeatherComponent implements OnInit {\r\n  @Input() current: ICurrentWeather;\r\n\r\n  constructor(private weatherService: WeatherService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { ICurrentWeather } from '../icurrent-weather';\r\nimport { map } from 'rxjs/operators';\r\nimport { IWeatherService } from './iweather-service';\r\n\r\ninterface ICurrentWeatherData {\r\n  weather: [{\r\n    description: string,\r\n    icon: string\r\n  }],\r\n  main: {\r\n    temp: number\r\n  },\r\n  sys: {\r\n    country: string\r\n  },\r\n  dt: number,\r\n  name: string\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherService implements IWeatherService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getCurrentWeather(search: string | string, country?: string) {\r\n    let uriParams = ''\r\n\r\n    if (typeof search  === 'string') {\r\n      uriParams = `q=${search}`\r\n    } else {\r\n      uriParams = `zip=${search}`\r\n    }\r\n\r\n    if (country) {\r\n      uriParams = `${uriParams},${country}`\r\n    }\r\n\r\n    return this.httpClient.get<ICurrentWeatherData>(\r\n      `${environment.baseUrl}api.openweathermap.org/data/2.5/weather?${uriParams}&appid=${environment.appId}`  \r\n    ).pipe(\r\n      map(data => this.transformToICurrentWeather(data))\r\n    )\r\n  }\r\n\r\n  private transformToICurrentWeather(data: ICurrentWeatherData): ICurrentWeather {\r\n    return {\r\n      city: data.name,\r\n      country: data.sys.country,\r\n      date: data.dt * 1000,\r\n      image: `http://openweathermap.org/img/w/${data.weather[0].icon}.png`,\r\n      temperatureFahrenheit: this.convertKelvinToFahrenheith(data.main.temp),\r\n      temperatureCelsius: this.convertKelvinToCelsius(data.main.temp),\r\n      description: data.weather[0].description\r\n    }\r\n  }\r\n\r\n  private convertKelvinToFahrenheith(kelvin: number): number {\r\n    return kelvin * 9/5 - 456.67;\r\n  }\r\n\r\n  private convertKelvinToCelsius(kelvin: number): number {\r\n    return kelvin - 273.15;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  appId: '38b4dc3e321267ac1398ba8e9476da2a',\r\n  baseUrl: 'http://'\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}